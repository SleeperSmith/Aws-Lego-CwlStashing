input {
	kinesis {
		kinesis_stream_name => "{{stream-name}}"
		application_name => "{{checkpoint-ddb}}"
		region => "{{aws-region}}"
		codec => json {}
	}
}

filter {
	if [logEvents] {
		split {
			field => "logEvents"
			add_tag => "split"
		}
	}
	if ("split" not in [tags]) {
		mutate {
			rename => { "[logEvents][0]" => "[logEvents]" }
		}
	}

	if [logGroup] == "{{vpc-log-group}}" {
		mutate {
			rename => { "[logEvents][id]" => "[event_unique_id]" }
			remove_field => "message"
		}
		date {
			match => [ "[logEvents][timestamp]", "UNIX_MS" ]
			remove_field => ["[logEvents][timestamp]"]
		}
		date {
			match => [ "[logEvents][extractedFields][start]", "UNIX" ]
			remove_field => ["[logEvents][extractedFields][start]"]
			target => "start_ts"
		}
		date {
			match => [ "[logEvents][extractedFields][end]", "UNIX" ]
			remove_field => ["[logEvents][extractedFields][end]"]
			target => "end_ts"
		}
		mutate {
			convert => { "[logEvents][extractedFields][bytes]" => "integer" }
			convert => { "[logEvents][extractedFields][packets]" => "integer" }
		}
		if [logEvents][extractedFields][srcaddr] != "-" {
			geoip {
				source => "[logEvents][extractedFields][srcaddr]"
				target => "source_location"
			}
		}
		if [logEvents][extractedFields][srcaddr] != "-" {
			geoip {
				source => "[logEvents][extractedFields][dstaddr]"
				target => "destination_location"
			}
		}
	}
	if [logGroup] == "{{ct-log-group}}" {
		json {
			source => "[logEvents][message]"
			remove_field => "[logEvents][message]"
		}
		date {
			match => ["eventTime", "ISO8601"]
		}
		mutate {
			rename => ["eventID", "event_unique_id"]
		}
		#if [sourceIPAddress] =~ "[0-9]*.[0-9]*.[0-9]*.[0-9]*" {
		#	geoip { source => "sourceIPAddress" }
		#}
	}
	if [logGroup] == "{{config-log-group}}" {
		# work in progress
	}
	
	mutate {
		# because index name cannot be upper case
		lowercase => ["logGroup"]
	}
}

output {
	elasticsearch {
		hosts => ["{{es-host}}"]
		index => "logstash-%{[logGroup]}-%{+YYYY.MM.dd}"
		document_id => '%{[event_unique_id]}'
	}
}
